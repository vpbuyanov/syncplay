name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --out-format colored-line-number
        continue-on-error: true

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Show Go env (debug)
        run: go env

      - name: Install deps
        run: go mod download

      - name: Run tests via Makefile
        run: make tests

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            coverage/cover.out
          if-no-files-found: error

      - name: Enforce coverage threshold (>= 60%)
        if: always()
        run: |
          total=$(go tool cover -func=coverage/cover.out | tail -n1 | awk '{print $3}')
          pct=${total%\%}
          echo "Total coverage: $pct%"
          awk 'BEGIN { exit ('"$pct"' < 60) ? 1 : 0 }'

  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU (для эмуляции arm64)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Build and push ARM64 image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/syncplay:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max


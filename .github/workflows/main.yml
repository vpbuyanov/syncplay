name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          args: --out-format colored-line-number
        continue-on-error: true

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Set up go Environment
        uses: actions/setup-go@v2
        with:
          go-version: 1.24
      - uses: actions/checkout@v4
      - name: Install Dependencies
        run: |
          go mod tidy

      - name: Run Tests
        run: |
          go test ./...

  build_and_push:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test

    steps:
      - name: Build
        uses: docker/build-push-action@v4
        with:
          platforms: linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/learnio-backend:raspi5

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Push
        uses: docker/build-push-action@v4
        with:
          platforms: linux/arm64
          tags: ${{ secrets.DOCKER_USERNAME }}/learnio-backend:raspi5
          push: true

  deploy:
    runs-on: self-hosted
    if: github.event_name == 'push'
    needs: build_and_push

    steps:
      - name: Deploy to server via SSH
        run: |
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no -p 22 ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} bash <<EOF
          set -e
          
          cd learnio
          
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASS }}
          
          docker stop learnio-backend learnio-worker || true
          docker rm learnio-backend learnio-worker || true
          docker rmi -f \$(docker images -aq) || true
          
          docker compose up backend worker -d
          
          EOF
